<p>I want to put the flag <code>-XX:+ShowCodeDetailsInExceptionMessages</code> to enable helpful NPEs (<a href="https://openjdk.java.net/jeps/358" rel="nofollow noreferrer">https://openjdk.java.net/jeps/358</a>) on the tests</p>

<p>I tried</p>

<pre><code>tasks.withType&lt;Test&gt; {
    jvmArgs("-XX:+ShowCodeDetailsInExceptionMessages")
    testLogging {
        setExceptionFormat("full") // Prints the message of the exception
    }
}
</code></pre>

<p>But the NPEs have still no messages.</p>

<p>Here's my java version</p>

<pre><code>java -version
openjdk version "14.0.1" 2020-04-14
OpenJDK Runtime Environment (build 14.0.1+7)
OpenJDK 64-Bit Server VM (build 14.0.1+7, mixed mode, sharing)
</code></pre>

<p><strong>EDIT WITH MORE RESEARCH</strong></p>

<p>To find out more precisely the origin of the problem, I did some more work. My conclusion is that it doesn't come from my java nor the test framework, it can only be a misconfig of gradle or a bug. 
Here's what i've done :</p>

<p>I've setup an empty gradle project with this build.gradle.kts</p>

<pre><code>plugins {
    java
}
repositories {
    mavenCentral()
}
dependencies {
    testImplementation("junit:junit:4.13")
}
tasks.withType&lt;Test&gt; {
    jvmArgs("-XX:+ShowCodeDetailsInExceptionMessages") // Helpful NPEs not working :(
    testLogging {
        setExceptionFormat("full") // Prints exception messages
    }
}
</code></pre>

<p>And with a test class (src/test/java/TestNPE.java)</p>

<pre><code>import org.junit.*;

public class TestNPE {

    @Test
    public void true_npe() {
        Object o = null;
        o.toString();
    }

    @Test
    public void throw_npe() {
        throw new NullPointerException("My own message");
    }
}
</code></pre>

<p>So now</p>

<pre><code>./gradlew test

&gt; Task :test FAILED

TestNPE &gt; throw_npe FAILED
    java.lang.NullPointerException: My own message
        at TestNPE.throw_npe(TestNPE.java:13)

TestNPE &gt; true_npe FAILED
    java.lang.NullPointerException
        at TestNPE.true_npe(TestNPE.java:8)

2 tests completed, 2 failed
</code></pre>

<p>This means the framework doesn't do anything special with NPEs.</p>

<p>After that, I retrieved the classpath gradle uses by running test with debug logs. With that, I could run JUnit directly. With -XX:+ShowCodeDetailsInExceptionMessages the helpful NPE message shows up :</p>

<pre><code>java -cp '/Users/apflieger/src/gradle-helpfull-npe/build/classes/java/test:/Users/apflieger/.gradle/caches/modules-2/files-2.1/junit/junit/4.13/e49ccba652b735c93bd6e6f59760d8254cf597dd/junit-4.13.jar:/Users/apflieger/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/42a25dc3219429f0e5d060061f71acb49bf010a0/hamcrest-core-1.3.jar' -XX:+ShowCodeDetailsInExceptionMessages org.junit.runner.JUnitCore TestNPE
JUnit version 4.13
.E.E
Time: 0.006
There were 2 failures:
1) throw_npe(TestNPE)
java.lang.NullPointerException: My own message
    at TestNPE.throw_npe(TestNPE.java:13)
2) true_npe(TestNPE)
java.lang.NullPointerException: Cannot invoke "Object.toString()" because "o" is null
    at TestNPE.true_npe(TestNPE.java:8)

FAILURES!!!
Tests run: 2,  Failures: 2
</code></pre>
