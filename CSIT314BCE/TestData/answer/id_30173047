<blockquote>
  <p>The children will always remember the secrets they have shared with their parents, even after their parents are
  gone. This is what closures are for functions.</p>
</blockquote>

<p>The secrets for JavaScript functions are the private variables</p>

<pre><code>var parent = function() {
 var name = "Mary"; // secret
}
</code></pre>

<p>Every time you call it, local variable "name" is created and given name "Mary". And every time the function exits the variable is lost and the name is forgotten.</p>

<p>As you may guess, because the variables are re-created every time the function is called, and nobody else will know them, there must be a secret place where they are stored. It could be called <strong>Chamber of Secrets</strong> or <strong>stack</strong> or <strong>local scope</strong> but it doesn't really matter. We know they are there, somewhere, hidden in the memory.</p>

<p>But, in JavaScript there is this very special thing that functions which are created inside other functions, can also know the local variables of their parents and keep them as long as they live.</p>

<pre><code>var parent = function() {
  var name = "Mary";
  var child = function(childName) {
    // I can also see that "name" is "Mary"
  }
}
</code></pre>

<p>So, as long as we are in the parent -function, it can create one or more child functions which do share the secret variables from the secret place.</p>

<p>But the sad thing is, if the child is also a private variable of its parent function, it would also die when the parent ends, and the secrets would die with them.</p>

<p>So to live, the child has to leave before it's too late</p>

<pre><code>var parent = function() {
  var name = "Mary";
  var child = function(childName) {
    return "My name is " + childName  +", child of " + name; 
  }
  return child; // child leaves the parent -&gt;
}
var child = parent(); // &lt; - and here it is outside 
</code></pre>

<p>And now, even though Mary is "no longer running", the memory of her is not lost and her child will always remember her name and other secrets they shared during their time together.</p>

<p>So, if you call the child "Alice", she will respond</p>

<pre><code>child("Alice") =&gt; "My name is Alice, child of Mary"
</code></pre>

<p>That's all there is to tell.</p>
