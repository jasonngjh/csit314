<p>Trying to answer specifically to the question (at least the title).</p>

<p>You can also rename <em>local</em> branch, but keeps tracking the old name on the remote.</p>

<pre><code>git branch -m old_branch new_branch
git push --set-upstream origin new_branch:old_branch
</code></pre>

<p>Now, when you run <code>git push</code>, the remote <code>old_branch</code> ref is updated with your local <code>new_branch</code>.</p>

<p><strong>You have to know and remember</strong> this configuration. But it can be useful if you don't have the choice for the remote branch name, but you don't like it (oh, I mean, you've got a <em>very good</em> reason not to like it !) and prefer a clearer name for your local branch.</p>

<p>Playing with the fetch configuration, you can even rename the local remote-reference. i.e, having a <code>refs/remote/origin/new_branch</code> ref pointer to the branch, that is in fact the <code>old_branch</code> on <code>origin</code>. However, I highly discourage this, for the safety of your mind.</p>
