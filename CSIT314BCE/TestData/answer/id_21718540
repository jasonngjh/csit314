<p>Lots of complicated and dangerous answers here, but it's actually easy:</p>

<pre><code>git revert --no-commit 0766c053..HEAD
git commit
</code></pre>

<p>This will revert everything from the HEAD back to the commit hash, meaning it will recreate that commit state in the working tree <em>as if</em> every commit since had been walked back. You can then commit the current tree, and it will create a brand new commit essentially equivalent to the commit you "reverted" to.  </p>

<p>(The <code>--no-commit</code> flag lets git revert all the commits at once- otherwise you'll be prompted for a message for each commit in the range, littering your history with unnecessary new commits.)</p>

<p>This is a <strong>safe and easy way to rollback to a previous state</strong>. No history is destroyed, so it can be used for commits that have already been made public.</p>
