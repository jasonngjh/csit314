<p>This provides a predicate instead of a value.</p>

<p><strong>NOTE:</strong> it will update the given array, and return the affected rows.</p>

<h2>Usage</h2>

<pre><code>var removed = helper.removeOne(arr, row =&gt; row.id === 5 );

var removed = helper.remove(arr, row =&gt; row.name.startsWith('BMW'));
</code></pre>

<h2>Definition</h2>

<pre><code>var helper = {

    // Remove and return the first occurrence

    removeOne: function(array, predicate) {
        for (var i = 0; i &lt; array.length; i++) {
            if (predicate(array[i])) {
                return array.splice(i, 1);
            }
        }
    },

    // Remove and return all occurrences

    remove: function(array, predicate) {
        var removed = [];

        for (var i = 0; i &lt; array.length;) {

            if (predicate(array[i])) {
                removed.push(array.splice(i, 1));
                continue;
            }
            i++;
        }
        return removed;
    }
};
</code></pre>
