<p>I've been reading so much throughout the answers on this page. I would say, if you know the thing, for sure you will understand those answers, otherwise, you are still confused.</p>

<p>To be short, you need to know several points:</p>

<ol>
<li><p><code>import a</code> action actually runs all that can be ran in "a"</p></li>
<li><p>Because of point 1, you may not want everything to be run in "a" when importing it</p></li>
<li><p>To solve the problem in point 2, python allows you to put a condition check</p></li>
<li><p><code>__name__</code> is an implicit variable in all <code>.py</code> modules; when <code>a.py</code> is imported, the value of <code>__name__</code> of <code>a.py</code> module is set to its file name "<code>a</code>"; when <code>a.py</code> is run directly using "<code>python a.py</code>", which means <code>a.py</code> is the entry point, then the value of <code>__name__</code> of <code>a.py</code> module is set to a string <code>__main__</code></p></li>
<li><p>Based on the mechanism how python sets the variable <code>__name__</code> for each module, do you know how to achieve point 3? The answer is fairly easy, right? Put a if condition: <code>if __name__ == "__main__": ...</code>; you can even put if <code>__name__ == "a"</code> depending on your functional need</p></li>
</ol>

<p>The important thing that python is special at is point 4! The rest is just basic logic.</p>
