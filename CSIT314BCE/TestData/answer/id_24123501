<p>A closure is a block of code which meets three criteria:</p>

<ul>
<li><p>It can be passed around as a value and</p></li>
<li><p>executed on demand by anyone who has that value, at which time</p></li>
<li><p>it can refer to variables from the context in which it was created
(that is, it is closed with respect to variable access, in the
mathematical sense of the word "closed").</p></li>
</ul>

<p>(The word "closure" actually has an imprecise meaning, and some people don't think that criterion #1 is part of the definition. I think it is.)</p>

<p>Closures are a mainstay of functional languages, but they are present in many other languages as well (for example, Java's anonymous inner classes). You can do cool stuff with them: they allow deferred execution and some elegant tricks of style.</p>

<p>By: Paul Cantrell, @ <a href="http://innig.net/software/ruby/closures-in-ruby">http://innig.net/software/ruby/closures-in-ruby</a></p>
