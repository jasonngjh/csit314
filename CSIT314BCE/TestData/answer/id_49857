<p>I always think of it as "pass by copy". It is a copy of the value be it primitive or reference. If it is a primitive it is a copy of the bits that are the value and if it is an Object it is a copy of the reference.</p>

<pre><code>public class PassByCopy{
    public static void changeName(Dog d){
        d.name = "Fido";
    }
    public static void main(String[] args){
        Dog d = new Dog("Maxx");
        System.out.println("name= "+ d.name);
        changeName(d);
        System.out.println("name= "+ d.name);
    }
}
class Dog{
    public String name;
    public Dog(String s){
        this.name = s;
    }
}
</code></pre>

<p>output of java PassByCopy:</p>

<blockquote>
  <p>name= Maxx<br>
  name= Fido</p>
</blockquote>

<p>Primitive wrapper classes and Strings are immutable so any example using those types will not work the same as other types/objects.</p>
