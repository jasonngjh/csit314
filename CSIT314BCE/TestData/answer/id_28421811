<p>If it's your last commit, just <strong>amend</strong> the commit:</p>

<pre><code>git commit --amend -o -m "New commit message"
</code></pre>

<p><em>(Using the <code>-o</code> (<code>--only</code>) flag to make sure you change only the commit message)</em></p>

<p><br/></p>

<p>If it's a buried commit, use the awesome <strong>interactive rebase</strong>:</p>

<pre><code>git rebase -i @~9   # Show the last 9 commits in a text editor
</code></pre>

<p>Find the commit you want, change <code>pick</code> to <code>r</code> (<code>reword</code>), and save and close the file. Done!</p>

<p><br></p>

<hr>

<p>Miniature Vim tutorial (or, how to rebase with only 8 keystrokes <kbd><code>3j</code></kbd><kbd><code>cw</code></kbd><code>r</code><kbd>Esc</kbd><kbd><code>ZZ</code></kbd>):</p>

<ul>
<li>Run <code>vimtutor</code> if you have time</li>
<li><kbd><code>h</code></kbd><kbd><code>j</code></kbd><kbd><code>k</code></kbd><kbd><code>l</code></kbd> correspond to movement keys <kbd>←</kbd><kbd>↓</kbd><kbd>↑</kbd><kbd>→</kbd></li>
<li>All commands can be prefixed with a "range", e.g. <kbd><code>3j</code></kbd> moves down three lines</li>
<li><kbd><code>i</code></kbd> to enter insert mode — text you type will appear in the file</li>
<li><kbd>Esc</kbd> or <kbd>Ctrl</kbd><kbd><code>c</code></kbd> to exit insert mode and return to "normal" mode</li>
<li><kbd><code>u</code></kbd> to undo</li>
<li><kbd>Ctrl</kbd><kbd><code>r</code></kbd> to redo</li>
<li><kbd><code>dd</code></kbd>, <kbd><code>dw</code></kbd>, <kbd><code>dl</code></kbd> to delete a line, word, or letter, respectively</li>
<li><kbd><code>cc</code></kbd>, <kbd><code>cw</code></kbd>, <kbd><code>cl</code></kbd> to change a line, word, or letter, respectively (same as <kbd><code>dd</code></kbd><kbd><code>i</code></kbd>)</li>
<li><kbd><code>yy</code></kbd>, <kbd><code>yw</code></kbd>, <kbd><code>yl</code></kbd> to copy ("yank") a line, word, or letter, respectively</li>
<li><kbd><code>p</code></kbd> or <kbd><code>P</code></kbd> to paste after, or before current position, respectively</li>
<li><kbd><code>:w</code></kbd><kbd>Enter</kbd> to save (write) a file</li>
<li><kbd><code>:q!</code></kbd><kbd>Enter</kbd> to quit without saving</li>
<li><kbd><code>:wq</code></kbd><kbd>Enter</kbd> or <kbd><code>ZZ</code></kbd> to save and quit</li>
</ul>

<p>If you edit text a lot, then switch to the <a href="https://en.wikipedia.org/wiki/Dvorak_keyboard_layout" rel="noreferrer">Dvorak keyboard layout</a>, learn to touch-type, and learn Vim. <a href="https://stackoverflow.com/questions/597077/is-learning-vim-worth-the-effort">Is it worth the effort?</a> Yes.</p>

<p><br/></p>

<hr>

<p>ProTip™: Don't be afraid to experiment with "dangerous" commands that rewrite history* — Git doesn't delete your commits for 90 days by default; you can find them in the reflog:</p>

<pre><code>$ git reset @~3   # Go back three commits
$ git reflog
c4f708b HEAD@{0}: reset: moving to @~3
2c52489 HEAD@{1}: commit: more changes
4a5246d HEAD@{2}: commit: make important changes
e8571e4 HEAD@{3}: commit: make some changes
... earlier commits ...
$ git reset 2c52489
... and you're back where you started
</code></pre>

<p>* <em>Watch out for options like <code>--hard</code> and <code>--force</code> though — they can discard data.</em>
*  <em>Also, don't rewrite history on any branches you're collaborating on.</em></p>
