<p><strong>Undo the Last Commit</strong></p>

<p>There are tons of situations where you really want to undo that last commit into your code. E.g. because you'd like to restructure it extensively - or even discard it altogether!</p>

<p>In these cases, the "reset" command is your best friend:</p>

<pre><code>$ git reset --soft HEAD~1
</code></pre>

<p>The above command (reset) will rewind your current HEAD branch to the specified revision. In our example above, we'd like to return to the one before the current revision - effectively making our last commit undone.</p>

<p>Note the <code>--soft</code> flag: this makes sure that the changes in undone revisions are preserved. After running the command, you'll find the changes as uncommitted local modifications in your working copy.</p>

<p>If you don't want to keep these changes, simply use the <code>--hard</code> flag. Be sure to only do this when you're sure you don't need these changes any more.</p>

<pre><code>$ git reset --hard HEAD~1
</code></pre>

<p><a href="https://i.stack.imgur.com/hqetQ.png" rel="noreferrer"><img src="https://i.stack.imgur.com/hqetQ.png" alt="Enter image description here"></a></p>
