<p>My perspective of Closures:</p>

<p><strong><em>Closures can be compared to a book, with a bookmark, on a bookshelf.</em></strong></p>

<p>Suppose you have read a book, and you like some page in the book.  You put in a bookmark at that page to track it.</p>

<p>Now once you finish reading the book, you do not need the book anymore, except, you want to have access to that page.  You could have just cut out the page, but then you would loose the context on the story.  So you put the book back in your bookshelf with the bookmark.</p>

<p>This is similar to a closure.  The book is the outer function, and the page is your inner function, which gets returned, from the outer function.  The bookmark is the reference to your page, and the context of the story is the lexical scope, which you need to retain.  The bookshelf is the function stack, which cannot be cleaned up of the old books, till you hold onto the page.</p>

<p><strong><em>Code Example:</em></strong></p>

<pre><code>function book() {
   var pages = [....]; //array of pages in your book
   var bookMarkedPage = 20; //bookmarked page number
   function getPage(){
       return pages[bookMarkedPage];
   }
   return getPage;
}

var myBook = book(),
    myPage = myBook.getPage();
</code></pre>

<p>When you run the <code>book()</code> function, you are allocating memory in the stack for the function to run in.  But since it returns a function, the memory cannot be released, as the inner function has access to the variables from the context outside it, in this case 'pages' and 'bookMarkedPage'.</p>

<p>So effectively calling <code>book()</code> returns a reference to a closure, i.e not only a function, but a reference to the book and it's context, i.e. a reference to the function <em>getPage</em>, state of <em>pages</em> and <em>bookMarkedPage</em> variables.</p>

<p><strong><em>Some points to consider:</em></strong></p>

<p><strong>Point 1:</strong>
The bookshelf, just like the function stack has limited space, so use it wisely.</p>

<p><strong>Point 2:</strong>
Think about the fact, whether you need to hold onto the entire book when you just want to track a single page.  You can release part of the memory, by not storing all the pages in the book when the closure is returned.</p>

<p><em>This is my perspective of Closures.  Hope it helps, and if anyone thinks that this is not correct, please do let me know, as I am very interested to understand even more about scopes and closures!</em>  </p>
