<ul>
<li><p><strong>passed by reference :</strong> caller and callee use same variable for parameter.  </p></li>
<li><p><strong>passed by value :</strong> caller and callee have two independent variables with same value.  </p></li>
<li>Java uses pass by value 

<ul>
<li>When passing primitive data, it copies the value of primitive data type.</li>
<li>When passing object, it copies the address of object and passes to callee method variable.</li>
</ul></li>
</ul>

<p>Example using primitive data type: </p>

<pre><code>public class PassByValuePrimitive {
    public static void main(String[] args) {
        int i=5;
        System.out.println(i);  //prints 5
        change(i);
        System.out.println(i);  //prints 5
    }


    private static void change(int i) {
        System.out.println(i);  //prints 5
        i=10;
        System.out.println(i); //prints 10

    }
}
</code></pre>

<p>Example using object:</p>

<pre><code>public class PassByValueObject {
    public static void main(String[] args) {
        List&lt;String&gt; list = new ArrayList&lt;&gt;();
        list.add("prem");
        list.add("raj");
        new PassByValueObject().change(list);
        System.out.println(list); // prints [prem, raj, ram]

    }


    private  void change(List list) {
        System.out.println(list.get(0)); // prem
        list.add("ram");
        list=null;
        System.out.println(list.add("bheem")); //gets NullPointerException
    }
}
</code></pre>
