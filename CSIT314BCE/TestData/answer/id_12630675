<p>The WHATWG HTML spec has the exact algorithm for parsing a legacy color value:
<a href="https://html.spec.whatwg.org/multipage/infrastructure.html#rules-for-parsing-a-legacy-colour-value" rel="noreferrer">https://html.spec.whatwg.org/multipage/infrastructure.html#rules-for-parsing-a-legacy-colour-value</a></p>

<p>The code Netscape Classic used for parsing color strings is open source:
<a href="https://dxr.mozilla.org/classic/source/lib/layout/layimage.c#155" rel="noreferrer">https://dxr.mozilla.org/classic/source/lib/layout/layimage.c#155</a></p>

<p>For example, notice that each character is parsed as a hex digit and then is shifted into a 32-bit integer <strong>without checking for overflow</strong>. Only eight hex digits fit into a 32-bit integer, which is why only the last 8 characters are considered. After parsing the hex digits into 32-bit integers, they are then truncated into 8-bit integers by dividing them by 16 until they fit into 8-bit, which is why leading zeros are ignored.</p>

<p>Update: this code does not exactly match what is defined in the spec, but the only difference there is a few lines of code. I think it is these lines that was added (in Netscape 4):</p>

<pre><code>if (bytes_per_val &gt; 4)
{
      bytes_per_val = 4;
}
</code></pre>
