<h2>WHAT TO USE, <code>reset --soft</code> or <code>reset --hard</code>?</h2>

<p>I am just adding two cents for @Kyralessa's answer:</p>

<p>If you are unsure what to use go for <code>--soft</code> (I used this convention to remember it --<strong>s</strong>oft for safe).</p>

<h3>Why ?</h3>

<p>If you choose <code>--hard</code> by mistake you will <strong>LOSE</strong> your changes as it wasn't before.
If you choose <code>--soft</code> by mistake you can achieve the same results of <code>--hard</code> by applying additional commands</p>

<pre><code>git reset HEAD file.html
git checkout -- file.html
</code></pre>

<h3>Full example</h3>

<pre><code>echo "some changes..." &gt; file.html
git add file.html
git commit -m "wrong commit"

# I need to reset
git reset --hard HEAD~1 (cancel changes)
# OR
git reset --soft HEAD~1 # Back to staging
git reset HEAD file.html # back to working directory
git checkout -- file.html # cancel changes
</code></pre>

<p>Credits goes to @Kyralessa.</p>
