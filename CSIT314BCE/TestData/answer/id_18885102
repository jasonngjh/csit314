<p>There is no need to use <code>indexOf</code> or <code>splice</code>. However, it performs better if you only want to remove one occurrence of an element. </p>

<p><strong>Find and move (move):</strong></p>

<pre><code>function move(arr, val) {
  var j = 0;
  for (var i = 0, l = arr.length; i &lt; l; i++) {
    if (arr[i] !== val) {
      arr[j++] = arr[i];
    }
  }
  arr.length = j;
}
</code></pre>

<p><strong>Use <code>indexOf</code> and <code>splice</code> (indexof):</strong></p>

<pre><code>function indexof(arr, val) {
  var i;
  while ((i = arr.indexOf(val)) != -1) {
    arr.splice(i, 1);
  }
}
</code></pre>

<p><strong>Use only <code>splice</code> (splice):</strong></p>

<pre><code>function splice(arr, val) {
  for (var i = arr.length; i--;) {
    if (arr[i] === val) {
      arr.splice(i, 1);
    }
  }
}
</code></pre>

<p><strong>Run-times on nodejs for array with 1000 elements (average over 10000 runs):</strong></p>

<p><em>indexof</em> is approximately 10x slower than <em>move</em>. Even if improved by removing the call to <code>indexOf</code> in <em>splice</em> it performs much worse than <em>move</em>. </p>

<pre><code>Remove all occurrences:
    move 0.0048 ms
    indexof 0.0463 ms
    splice 0.0359 ms

Remove first occurrence:
    move_one 0.0041 ms
    indexof_one 0.0021 ms
</code></pre>
