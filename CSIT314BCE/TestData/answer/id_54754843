<p>Both <a href="https://stackoverflow.com/a/17864475/228738">CoolAJ86's</a> and <a href="http://stackoverflow.com/a/1307969/2227298">apenwarr's</a> answers are very similar. I went back and forth between the two trying to understand the better approach to support a submodule replacement. Below is a combination of them.</p>

<p>First navigate Git Bash to the root of the Git repository to be split. In my example here that is <code>~/Documents/OriginalRepo (master)</code></p>

<pre><code># Move the folder at prefix to a new branch
git subtree split --prefix=SubFolderName/FolderToBeNewRepo --branch=to-be-new-repo

# Create a new repository out of the newly made branch
mkdir ~/Documents/NewRepo
pushd ~/Documents/NewRepo
git init
git pull ~/Documents/OriginalRepo to-be-new-repo

# Upload the new repository to a place that should be referenced for submodules
git remote add origin git@github.com:myUsername/newRepo.git
git push -u origin master
popd

# Replace the folder with a submodule
git rm -rf ./SubFolderName/FolderToBeNewRepo
git submodule add git@github.com:myUsername/newRepo.git SubFolderName/FolderToBeNewRepo
git branch --delete --force to-be-new-repo
</code></pre>

<p>Below is a copy of above with the customize-able names replaced and using HTTPS instead. The root folder is now <code>~/Documents/_Shawn/UnityProjects/SoProject (master)</code></p>

<pre><code># Move the folder at prefix to a new branch
git subtree split --prefix=Assets/SoArchitecture --branch=so-package

# Create a new repository out of the newly made branch
mkdir ~/Documents/_Shawn/UnityProjects/SoArchitecture
pushd ~/Documents/_Shawn/UnityProjects/SoArchitecture
git init
git pull ~/Documents/_Shawn/UnityProjects/SoProject so-package

# Upload the new repository to a place that should be referenced for submodules
git remote add origin https://github.com/Feddas/SoArchitecture.git
git push -u origin master
popd

# Replace the folder with a submodule
git rm -rf ./Assets/SoArchitecture
git submodule add https://github.com/Feddas/SoArchitecture.git
git branch --delete --force so-package
</code></pre>
