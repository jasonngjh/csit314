<p>There are a lot of good answers here but I just want to chime in that when using delete to remove a property in JavaScript, it is often wise to first check if that property exists to prevent errors.</p>

<p>E.g</p>

<pre><code>var obj = {"property":"value", "property2":"value"};

if (obj &amp;&amp; obj.hasOwnProperty("property2")) {
  delete obj.property2;
} else {
  //error handling
}
</code></pre>

<p>Due to the dynamic nature of JavaScript there are often cases where you simply don't know if the property exists or not. Checking if obj exists before the &amp;&amp; also makes sure you don't throw an error due to calling the hasOwnProperty() function on an undefined object.</p>

<p>Sorry if this didn't add to your specific use case but I believe this to be a good design to adapt when managing objects and their properties.</p>
