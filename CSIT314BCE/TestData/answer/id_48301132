<h2>Yield</h2>

<pre><code>&gt;&gt;&gt; def create_generator():
...    my_list = range(3)
...    for i in my_list:
...        yield i*i
...
&gt;&gt;&gt; my_generator = create_generator() # create a generator
&gt;&gt;&gt; print(my_generator) # my_generator is an object!
&lt;generator object create_generator at 0xb7555c34&gt;
&gt;&gt;&gt; for i in my_generator:
...     print(i)
0
1
4
</code></pre>

<p><strong>In short</strong>, you can see that the loop does not stop and continues to function even after the object or variable is sent (unlike <code>return</code> where the loop stops after execution).</p>
