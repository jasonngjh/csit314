<p>The question is not clearly posed. The reason is that <code>git add</code> has two meanings:</p>

<ol>
<li>adding a <strong>new file</strong> to the staging area, then undo with <code>git rm --cached file</code>.</li>
<li>adding a <strong>modified</strong> file to the staging area, then undo with <code>git reset HEAD file</code>.</li>
</ol>

<p><strong>If in doubt, use</strong></p>

<pre><code>git reset HEAD file
</code></pre>

<p>Because it does the expected thing in both cases.</p>

<p><strong>Warning:</strong> if you do <code>git rm --cached file</code> on a file that was <strong>modified</strong> (a file that existed before in the repository), then the file will be removed on <code>git commit</code>! It will still exist in your file system, but if anybody else pulls your commit, the file will be deleted from their work tree.</p>

<p><code>git status</code> will tell you if the file was a <strong>new file</strong> or <strong>modified</strong>:</p>

<pre><code>On branch master
Changes to be committed:
  (use "git reset HEAD &lt;file&gt;..." to unstage)

    new file:   my_new_file.txt
    modified:   my_modified_file.txt
</code></pre>
