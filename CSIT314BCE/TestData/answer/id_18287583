<p>Shortest answer :)</p>

<ul>
<li>Java has pass-by-value (and pass-reference-by-value.) </li>
<li><strong>C# also has pass-by-reference</strong></li>
</ul>

<p>In C# this is accomplished with the "out" and "ref" keywords. </p>

<p>Pass By Reference: The variable is passed in such a way that <strong>a reassignment inside the method is reflected even outside the method.</strong></p>

<p>Here follows <strong>an example of passing-by-reference (C#)</strong>.
This feature does not exist in java.</p>

<pre><code>class Example
{
    static void InitArray(out int[] arr)
    {
        arr = new int[5] { 1, 2, 3, 4, 5 };
    }

    static void Main()
    {
        int[] someArray;
        InitArray(out someArray);

        // This is true !
        boolean isTrue = (someArray[0] == 1);
    }
}
</code></pre>

<p>See also: <a href="http://msdn.microsoft.com/en-us/library/szasx730.aspx" rel="nofollow" title="MSDN library: passing arrays by ref and out">MSDN library (C#): passing arrays by ref and out</a></p>

<p>See also: <a href="http://msdn.microsoft.com/en-us/library/0f66670z.aspx" rel="nofollow" title="MSDN library: passing by reference">MSDN library (C#): passing by by value and by reference</a></p>
