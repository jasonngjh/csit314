<p>A couple of cents: I think, it will be good to draw memory graphical and more simple:</p>

<p><a href="https://i.stack.imgur.com/nlb7A.jpg" rel="noreferrer"><img src="https://i.stack.imgur.com/nlb7A.jpg" alt="This is my vision of process memory construction with simplification for more easy understanding wht happening"></a></p>

<p><br>
Arrows - show where grow stack and heap, process stack size have limit, defined in OS, thread stack size limits by parameters in thread create API usually. Heap usually limiting by process maximum virtual memory size, for 32 bit 2-4&nbsp;GB for example.</p>

<p>So simple way: process heap is general for process and all threads inside, using for memory allocation in common case with something like <strong>malloc()</strong>.</p>

<p>Stack is quick memory for store in common case function return pointers and variables, processed as parameters in function call, local function variables.</p>
