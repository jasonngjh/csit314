<p>Java is a call by value</p>

<p>How it works</p>

<ul>
<li><p>You always pass a copy of the bits of the value of the reference!</p></li>
<li><p>If it's a primitive data type these bits contain the value of the primitive data type itself, That's why if we change the value of header inside the method then it does not reflect the changes outside.</p></li>
<li><p>If it's an object data type like <strong>Foo foo=new Foo()</strong> then in this case copy of the address of the object passes like file shortcut  , suppose we have a text file <strong>abc.txt</strong> at <strong>C:\desktop</strong> and suppose we make shortcut of the same file and put this inside <strong>C:\desktop\abc-shortcut</strong> so when you access the file from <strong>C:\desktop\abc.txt</strong> and write <strong>'Stack Overflow'</strong> and close the file and again you open the file from shortcut then you write <strong>' is the largest online community for programmers to learn'</strong> then total file change will be <strong>'Stack Overflow is the largest online community for programmers to learn'</strong> which means it doesn't matter from where you open the file , each time we were accessing the same file , here we can assume <strong>Foo</strong> as a file and suppose foo stored at <strong>123hd7h</strong>(original address like <strong>C:\desktop\abc.txt</strong> ) address and <strong>234jdid</strong>(copied address like <strong>C:\desktop\abc-shortcut</strong> which actually contains the original address of the file inside) ..
So for better understanding make shortcut file and feel..</p></li>
</ul>
