<p><a href="https://en.wikipedia.org/wiki/JSON" rel="noreferrer">JSON</a> (JavaScript Object Notation) and <a href="https://en.wikipedia.org/wiki/JSONP" rel="noreferrer">JSONP</a> ("JSON with padding") formats seems to be very similar and therefore it might be very confusing which MIME type they should be using. Even though the formats are similar, there are some subtle differences between them.</p>

<p>So whenever in any doubts, I have a very simple approach (which works perfectly fine in most cases), namely, go and check corresponding RFC document.</p>

<p><strong>JSON</strong>
<a href="http://www.ietf.org/rfc/rfc4627.txt" rel="noreferrer">RFC 4627</a> (The application/json Media Type for JavaScript Object Notation (JSON)) is a specifications of JSON format. It says in section 6, that the MIME media type for JSON text is </p>

<pre><code>application/json.
</code></pre>

<p><strong>JSONP</strong>
JSONP ("JSON with padding") is handled different way than JSON, in a browser. JSONP is treated as a regular JavaScript script and therefore it should use <code>application/javascript,</code> the current official MIME type for JavaScript. In many cases, however, <code>text/javascript</code> MIME type will work fine too.</p>

<p>Note that <code>text/javascript</code> has been marked as obsolete by <a href="http://www.rfc-editor.org/rfc/rfc4329.txt" rel="noreferrer">RFC 4329</a> (Scripting Media Types) document and it is recommended to use <code>application/javascript</code> type instead. However, due to legacy reasons, <code>text/javascript</code> is still widely used and it has cross-browser support (which is not always a case with <code>application/javascript</code> MIME type, especially with older browsers).</p>
