<pre><code>    Array.prototype.remove = function(start, end) {
        var n = this.slice((end || start) + 1 || this.length);
        return this.length = start &lt; 0 ? this.length + start : start,
        this.push.apply(this, n)
    }
</code></pre>

<p><code>start</code> and <code>end</code> can be negative. In that case they count from the end of the array.</p>

<p>If only <code>start</code> is specified, only one element is removed.</p>

<p>The function returns the new array length.</p>

<pre><code>z = [0,1,2,3,4,5,6,7,8,9];

newlength = z.remove(2,6);
</code></pre>

<p>(8) [0, 1, 7, 8, 9]</p>

<pre><code>z=[0,1,2,3,4,5,6,7,8,9];

newlength = z.remove(-4,-2);
</code></pre>

<p>(7) [0, 1, 2, 3, 4, 5, 9]</p>

<pre><code>z=[0,1,2,3,4,5,6,7,8,9];

newlength = z.remove(3,-2);
</code></pre>

<p>(4) [0, 1, 2, 9]</p>
