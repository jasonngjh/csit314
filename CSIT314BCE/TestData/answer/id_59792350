<p>TL;DR: It's like passing a pointer in C, so it's pass-by-value and you can change the public and mutable members of the object the caller's variable is pointing to.</p>

<p>Let's define the terms first:</p>

<ol>
<li><p>pass-by-value: You can not change the callers variable because only it's value is passed.</p></li>
<li><p>pass-by-reference: You can change the callers variable because an alias (l-value reference) to the variable is passed.</p></li>
</ol>

<p>Ok, so in Java and Python pointers are essentially called variables.
So if you pass a Java/Python variable to a method/function, you are passing a way to find it's location in memory.</p>

<p>You cannot change which object the callers function is referencing/pointing to but you can change the object's value. Java/Python are pass-by-value, but the special semantics of them allow you to change the underlying object anyway by (implicit) dereferencing of the variable/pointer.</p>
