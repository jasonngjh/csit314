<p><strong>Vanilla JavaScript (ES5.1) – <em>in place</em> edition</strong></p>

<p><em>Browser support: <a href="http://en.wikipedia.org/wiki/Internet_Explorer_9" rel="noreferrer">Internet&nbsp;Explorer&nbsp;9</a> or later (<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf#Browser_compatibility" rel="noreferrer">detailed browser support</a>)</em></p>

<pre><code>/**
 * Removes all occurences of the item from the array.
 *
 * Modifies the array “in place”, i.e. the array passed as an argument
 * is modified as opposed to creating a new array. Also returns the modified
 * array for your convenience.
 */
function removeInPlace(array, item) {
    var foundIndex, fromIndex;

    // Look for the item (the item can have multiple indices)
    fromIndex = array.length - 1;
    foundIndex = array.lastIndexOf(item, fromIndex);

    while (foundIndex !== -1) {
        // Remove the item (in place)
        array.splice(foundIndex, 1);

        // Bookkeeping
        fromIndex = foundIndex - 1;
        foundIndex = array.lastIndexOf(item, fromIndex);
    }

    // Return the modified array
    return array;
}
</code></pre>

<p><strong>Vanilla JavaScript (ES5.1) – <em>immutable</em> edition</strong></p>

<p><em>Browser support: Same as vanilla JavaScript in place edition</em></p>

<pre><code>/**
 * Removes all occurences of the item from the array.
 *
 * Returns a new array with all the items of the original array except
 * the specified item.
 */
function remove(array, item) {
    var arrayCopy;

    arrayCopy = array.slice();

    return removeInPlace(arrayCopy, item);
}
</code></pre>

<p><strong>Vanilla ES6 – <em>immutable</em> edition</strong></p>

<p><em>Browser support: Chrome 46, Edge 12, Firefox 16, Opera 37, Safari 8 (<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator#Browser_compatibility" rel="noreferrer">detailed browser support</a>)</em></p>

<pre><code>/**
 * Removes all occurences of the item from the array.
 *
 * Returns a new array with all the items of the original array except
 * the specified item.
 */
function remove(array, item) {
    // Copy the array
    array = [...array];

    // Look for the item (the item can have multiple indices)
    let fromIndex = array.length - 1;
    let foundIndex = array.lastIndexOf(item, fromIndex);

    while (foundIndex !== -1) {
        // Remove the item by generating a new array without it
        array = [
            ...array.slice(0, foundIndex),
            ...array.slice(foundIndex + 1),
        ];

        // Bookkeeping
        fromIndex = foundIndex - 1;
        foundIndex = array.lastIndexOf(item, fromIndex)
    }

    // Return the new array
    return array;
}
</code></pre>
