<p><strong>Before I start, jQuery is a JavaScript library used for DOM manipulation. So you should not be using jQuery for a page redirect.</strong></p>

<p>A quote from Jquery.com:</p>

<blockquote>
  <p>While jQuery might run without major issues in older browser versions,
  we do not actively test jQuery in them and generally do not fix bugs
  that may appear in them.</p>
</blockquote>

<p>It was found here:
<a href="https://jquery.com/browser-support/" rel="noreferrer">https://jquery.com/browser-support/</a></p>

<p>So jQuery is not an end-all and be-all solution for backwards compatibility.</p>

<p>The following solution using raw JavaScript works in all browsers and have been standard for a long time so you don't need any libraries for cross browser support.</p>

<p>This page will redirect to <strong><a href="http://www.google.com" rel="noreferrer">Google</a></strong> after 3000 milliseconds</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;example&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;p&gt;You will be redirected to google shortly.&lt;/p&gt;
        &lt;script&gt;
            setTimeout(function(){
                window.location.href="http://www.google.com"; // The URL that will be redirected too.
            }, 3000); // The bigger the number the longer the delay.
        &lt;/script&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Different options are as follows:</p>

<pre><code>window.location.href="url"; // Simulates normal navigation to a new page
window.location.replace("url"); // Removes current URL from history and replaces it with a new URL
window.location.assign("url"); // Adds new URL to the history stack and redirects to the new URL

window.history.back(); // Simulates a back button click
window.history.go(-1); // Simulates a back button click
window.history.back(-1); // Simulates a back button click
window.navigate("page.html"); // Same as window.location="url"
</code></pre>

<p>When using replace, the back button will not go back to the redirect page, as if it was never in the history. If you want the user to be able to go back to the redirect page then use <code>window.location.href</code> or <code>window.location.assign</code>. If you do use an option that lets the user go back to the redirect page, remember that when you enter the redirect page it will redirect you back. So put that into consideration when picking an option for your redirect. Under conditions where the page is only redirecting when an action is done by the user then having the page in the back button history will be okay. But if the page auto redirects then you should use replace so that the user can use the back button without getting forced back to the page the redirect sends.</p>

<p>You can also use meta data to run a page redirect as followed.</p>

<p><strong>META Refresh</strong></p>

<pre><code>&lt;meta http-equiv="refresh" content="0;url=http://evil.com/" /&gt;
</code></pre>

<p><strong>META Location</strong></p>

<pre><code>&lt;meta http-equiv="location" content="URL=http://evil.com" /&gt;
</code></pre>

<p><strong>BASE Hijacking</strong></p>

<pre><code>&lt;base href="http://evil.com/" /&gt;
</code></pre>

<p>Many more methods to redirect your unsuspecting client to a page they may not wish to go can be found on this page (not one of them is reliant on jQuery):</p>

<blockquote>
  <p><a href="https://code.google.com/p/html5security/wiki/RedirectionMethods" rel="noreferrer">https://code.google.com/p/html5security/wiki/RedirectionMethods</a></p>
</blockquote>

<p>I would also like to point out, people don't like to be randomly redirected. Only redirect people when absolutely needed. If you start redirecting people randomly they will never go to your site again.</p>

<p>The next paragraph is hypothetical:</p>

<p>You also may get reported as a malicious site. If that happens then when people click on a link to your site the users browser may warn them that your site is malicious. What may also happen is search engines may start dropping your rating if people are reporting a bad experience on your site.</p>

<p>Please review Google Webmaster Guidelines about redirects:
<a href="https://support.google.com/webmasters/answer/2721217?hl=en&amp;ref_topic=6001971" rel="noreferrer">https://support.google.com/webmasters/answer/2721217?hl=en&amp;ref_topic=6001971</a></p>

<p>Here is a fun little page that kicks you out of the page.</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Go Away&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h1&gt;Go Away&lt;/h1&gt;
        &lt;script&gt;
            setTimeout(function(){
                window.history.back();
            }, 3000);
        &lt;/script&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>If you combine the two page examples together you would have an infant loop of rerouting that will guarantee that your user will never want to use your site ever again.</p>
