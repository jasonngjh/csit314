<p>The Difference between <strong>GIT Fetch</strong> and <strong>GIT Pull</strong> can be explained with the following scenario:
<em>(Keeping in mind that pictures speak louder than words!, I have provided pictorial representation)</em></p>

<p>Let's take an example that you are working on a project with your team members. So their will be one main Branch of the project and all the contributors must fork it to their own local repository and then work on this local branch to modify/Add modules then push back to the main branch.</p>

<p>So, 
<strong>Initial State</strong> of the two Branches when you forked the main project on your local repository will be like this- (<code>A</code>, <code>B</code> and <code>C</code> are Modules already completed of the project)</p>

<p><a href="https://i.stack.imgur.com/SPky3.png" rel="noreferrer"><img src="https://i.stack.imgur.com/SPky3.png" alt="enter image description here"></a></p>

<p>Now, you have started working on the new module (suppose <code>D</code>)  and when you have completed the <code>D</code> module you want to push it to the main branch, But meanwhile what happens is that one of your teammates has developed new Module <code>E</code>, <code>F</code> and modified <code>C</code>.<br>
So now what has happened is that your local repository is lacking behind the original progress of the project and thus pushing of your changes to main branch can lead to conflict and may cause your Module <code>D</code> to malfunction.</p>

<p><a href="https://i.stack.imgur.com/SpIlX.png" rel="noreferrer"><img src="https://i.stack.imgur.com/SpIlX.png" alt="enter image description here"></a></p>

<p>To avoid such issues and to work parallel with the original progress of the project their are Two ways:</p>

<p><strong>1. Git Fetch-</strong> This will Download all the changes that have been made to the origin/main branch project which are not present in your local branch. And will wait for the Git Merge command to apply the changes that have been fetched to your Repository or branch.</p>

<p><a href="https://i.stack.imgur.com/8qhgH.png" rel="noreferrer"><img src="https://i.stack.imgur.com/8qhgH.png" alt="enter image description here"></a></p>

<p>So now You can carefully monitor the files before merging it to your repository. And you can also modify <code>D</code> if required because of Modified <code>C</code>.</p>

<p><a href="https://i.stack.imgur.com/JYA7S.png" rel="noreferrer"><img src="https://i.stack.imgur.com/JYA7S.png" alt="enter image description here"></a></p>

<p><strong>2. Git Pull-</strong> This will update your local branch with the origin/main branch i.e. actually what it does is combination of Git Fetch and Git merge one after another.
<em>But this may Cause Conflicts to occur, so itâ€™s recommended to use Git Pull with a clean copy.</em></p>

<p><a href="https://i.stack.imgur.com/O1vk0.png" rel="noreferrer"><img src="https://i.stack.imgur.com/O1vk0.png" alt="enter image description here"></a></p>
