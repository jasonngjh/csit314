<p>After all, none of examples suits me, so I wrote my own.</p>

<p><strong>Tests</strong> (no support of Internet&nbsp;Explorer <code>filter:alpha</code>):</p>

<p>a) Check if the document is not hidden</p>

<p>b) Check if an element has zero width / height / opacity or <code>display:none</code> / <code>visibility:hidden</code> in inline styles</p>

<p>c) Check if the center (also because it is faster than testing every pixel / corner) of element is not hidden by other element (and all ancestors, example: <code>overflow:hidden</code> / scroll / one element over enother) or screen edges</p>

<p>d) Check if an element has zero width / height / opacity or <code>display:none</code> / visibility:hidden in computed styles (among all ancestors)</p>

<p><strong>Tested on</strong></p>

<p>Android 4.4 (Native browser/Chrome/Firefox), Firefox (Windows/Mac), Chrome (Windows/Mac), Opera (Windows <a href="http://en.wikipedia.org/wiki/Presto_%28layout_engine%29">Presto</a>/Mac Webkit), Internet&nbsp;Explorer (Internet&nbsp;Explorer 5-11 document modes + Internet&nbsp;Explorer 8 on a virtual machine), Safari (Windows/Mac/iOS)</p>

<pre><code>var is_visible = (function () {
    var x = window.pageXOffset ? window.pageXOffset + window.innerWidth - 1 : 0,
        y = window.pageYOffset ? window.pageYOffset + window.innerHeight - 1 : 0,
        relative = !!((!x &amp;&amp; !y) || !document.elementFromPoint(x, y));
        function inside(child, parent) {
            while(child){
                if (child === parent) return true;
                child = child.parentNode;
            }
        return false;
    };
    return function (elem) {
        if (
            document.hidden ||
            elem.offsetWidth==0 ||
            elem.offsetHeight==0 ||
            elem.style.visibility=='hidden' ||
            elem.style.display=='none' ||
            elem.style.opacity===0
        ) return false;
        var rect = elem.getBoundingClientRect();
        if (relative) {
            if (!inside(document.elementFromPoint(rect.left + elem.offsetWidth/2, rect.top + elem.offsetHeight/2),elem)) return false;
        } else if (
            !inside(document.elementFromPoint(rect.left + elem.offsetWidth/2 + window.pageXOffset, rect.top + elem.offsetHeight/2 + window.pageYOffset), elem) ||
            (
                rect.top + elem.offsetHeight/2 &lt; 0 ||
                rect.left + elem.offsetWidth/2 &lt; 0 ||
                rect.bottom - elem.offsetHeight/2 &gt; (window.innerHeight || document.documentElement.clientHeight) ||
                rect.right - elem.offsetWidth/2 &gt; (window.innerWidth || document.documentElement.clientWidth)
            )
        ) return false;
        if (window.getComputedStyle || elem.currentStyle) {
            var el = elem,
                comp = null;
            while (el) {
                if (el === document) {break;} else if(!el.parentNode) return false;
                comp = window.getComputedStyle ? window.getComputedStyle(el, null) : el.currentStyle;
                if (comp &amp;&amp; (comp.visibility=='hidden' || comp.display == 'none' || (typeof comp.opacity !=='undefined' &amp;&amp; comp.opacity != 1))) return false;
                el = el.parentNode;
            }
        }
        return true;
    }
})();
</code></pre>

<p>How to use:</p>

<pre><code>is_visible(elem) // boolean
</code></pre>
