<p>When adding <code>"use strict";</code>, the following cases will throw a <strong>SyntaxError</strong> before the script is executing:</p>

<ul>
<li><p><em>Paving the way for future ECMAScript versions</em>, using one of the newly reserved keywords (in prevision for <em>ECMAScript 6</em>): <code>implements</code>, <code>interface</code>, <code>let</code>, <code>package</code>, <code>private</code>, <code>protected</code>, <code>public</code>, <code>static</code>, and <code>yield</code>.</p></li>
<li><p>Declaring function in blocks </p>

<pre><code>if(a&lt;b){ function f(){} }
</code></pre></li>
<li><p>Octal syntax </p>

<pre><code>var n = 023;
</code></pre></li>
<li><p><code>this</code> point to the global object.</p>

<pre><code> function f() {
      "use strict";
      this.a = 1;
 };
 f(); 
</code></pre></li>
<li><p>Declaring twice the same name for a property name in an object literal </p>

<pre><code> {a: 1, b: 3, a: 7} 
</code></pre>

<p>This is no longer the case in ECMAScript 6 (<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1041128" rel="noreferrer">bug 1041128</a>).</p></li>
<li><p>Declaring two function arguments with the same name function </p>

<pre><code>f(a, b, b){}
</code></pre></li>
<li><p>Setting a value to an undeclared variable</p>

<pre><code>function f(x){
   "use strict";
   var a = 12;
   b = a + x*35; // error!
}
f();
</code></pre></li>
<li><p>Using <code>delete</code> on a variable name <code>delete myVariable;</code></p></li>
<li><p>Using <code>eval</code> or <code>arguments</code> as variable or function argument name</p>

<pre><code>"use strict";
arguments++;
var obj = { set p(arguments) { } };
try { } catch (arguments) { }
function arguments() { } 
</code></pre></li>
</ul>

<p>Sources:</p>

<ul>
<li><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode" rel="noreferrer">Transitioning to strict mode</a> on MDN</p></li>
<li><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode" rel="noreferrer">Strict mode</a> on MDN</p></li>
<li><p><a href="http://web.archive.org/web/20170707015027/http://cjihrig.com/blog/javascripts-strict-mode-and-why-you-should-use-it/" rel="noreferrer">JavaScriptâ€™s Strict Mode and Why You Should Use It</a> on Colin J. Ihrig's blog (archived version)</p></li>
</ul>
