<p>Find the <code>index</code> of the array element you want to remove using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf" rel="noreferrer"><code>indexOf</code></a>, and then remove that index with <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice" rel="noreferrer"><code>splice</code></a>.</p>

<blockquote>
  <p>The splice() method changes the contents of an array by removing
  existing elements and/or adding new elements.</p>
</blockquote>

<p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const array = [2, 5, 9];

console.log(array);

const index = array.indexOf(5);
if (index &gt; -1) {
  array.splice(index, 1);
}

// array = [2, 9]
console.log(array); </code></pre>
</div>
</div>
</p>

<p>The second parameter of <code>splice</code> is the number of elements to remove. Note that <code>splice</code> modifies the array in place and returns a new array containing the elements that have been removed.</p>

<hr>

<p>For the reason of completeness, here are functions. First function removes only single occurrence (i.e. removing first match of <code>5</code> from <code>[2,5,9,1,5,8,5]</code>), while second function removes all occurrences:</p>

<pre><code>function removeItemOnce(arr, value) { 
    var index = arr.indexOf(value);
    if (index &gt; -1) {
        arr.splice(index, 1);
    }
    return arr;
}

function removeItemAll(arr, value) {
    var i = 0;
    while (i &lt; arr.length) {
        if(arr[i] === value) {
            arr.splice(i, 1);
        } else {
            ++i;
        }
    }
    return arr;
}
</code></pre>
