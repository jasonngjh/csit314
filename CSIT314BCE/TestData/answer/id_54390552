<p>To remove a particular element or subsequent elements, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice" rel="nofollow noreferrer">Array.splice()</a> method works well.</p>

<p>The splice() method changes the contents of an array by removing or replacing existing elements and/or adding new elements, and it returns the removed item(s).</p>

<p><strong>Syntax:</strong> <em>array.splice(index, deleteCount, item1, ....., itemX)</em></p>

<p>Here <code>index</code> is mandatory and rest arguments are optional.</p>

<p>For example:</p>

<pre><code>let arr = [1, 2, 3, 4, 5, 6];
arr.splice(2,1);
console.log(arr);
// [1, 2, 4, 5, 6]
</code></pre>

<p><strong>Note:</strong> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice" rel="nofollow noreferrer">Array.splice()</a> method can be used if you know the index of the element which you want to delete. But we may have a few more cases as mentioned below:</p>

<ol>
<li><p>In case you want to delete just last element, you can use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop" rel="nofollow noreferrer">Array.pop()</a></p></li>
<li><p>In case you want to delete just first element, you can use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift" rel="nofollow noreferrer">Array.shift()</a></p></li>
<li><p>If you know the element alone, but not the position (or index) of the element, and want to delete all matching elements using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter" rel="nofollow noreferrer">Array.filter()</a> method:</p>

<pre><code>let arr = [1, 2, 1, 3, 4, 1, 5, 1];

let newArr = arr.filter(function(val){
    return val !== 1;
});
//newArr =&gt; [2, 3, 4, 5]
</code></pre>

<p>Or by using the splice() method as:</p>

<pre><code>let arr = [1, 11, 2, 11, 3, 4, 5, 11, 6, 11];
    for (let i = 0; i &lt; arr.length-1; i++) {
       if ( arr[i] === 11) {
         arr.splice(i, 1);
       }
    }
    console.log(arr);
    // [1, 2, 3, 4, 5, 6]
</code></pre>

<p>Or suppose we want to delete <code>del</code> from the array <code>arr</code>:</p>

<pre><code>let arr = [1, 2, 3, 4, 5, 6];
let del = 4;
if (arr.indexOf(4) &gt;= 0) {
    arr.splice(arr.indexOf(4), 1)
}
</code></pre>

<p>Or</p>

<pre><code>let del = 4;
for(var i = arr.length - 1; i &gt;= 0; i--) {
    if(arr[i] === del) {
       arr.splice(i, 1);
    }
}
</code></pre></li>
<li><p>If you know the element alone but not the position (or index) of the element, and want to delete just very first matching element using splice() method:</p>

<pre><code>let arr = [1, 11, 2, 11, 3, 4, 5, 11, 6, 11];

for (let i = 0; i &lt; arr.length-1; i++) {
  if ( arr[i] === 11) {
    arr.splice(i, 1);
    break;
  }
}
console.log(arr);
// [1, 11, 2, 11, 3, 4, 5, 11, 6, 11]
</code></pre></li>
</ol>
