<p>The author of JSON wants us to include comments in the JSON, but strip them out before parsing them (see <a href="https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr" rel="nofollow noreferrer">link</a> provided by Michael Burr). If JSON should have comments, why not standardize them, and let the JSON parser do the job? I don't agree with the logic there, but, alas, that's the standard. Using a YAML solution as suggested by others is good, but it requires a library dependency.</p>

<p>If you want to strip out comments, but don't want to have a library dependency, here is a two-line solution, which works for C++-style comments, but can be adapted to others:</p>

<pre><code>var comments = new RegExp("//.*", 'mg');
data = JSON.parse(fs.readFileSync(sample_file, 'utf8').replace(comments, ''));
</code></pre>

<p>Note that this solution can only be used in cases where you can be sure that the JSON data does not contain the comment initiator, e.g. ('//').</p>

<p>Another way to achieve JSON parsing, stripping of comments, and no extra library, is to evaluate the JSON in a JavaScript interpreter. The caveat with that approach, of course, is that you would only want to evaluate untainted data (no untrusted user-input). Here is an example of this approach in Node.js -- another caveat, the following example will only read the data once and then it will be cached:</p>

<pre><code>data = require(fs.realpathSync(doctree_fp));
</code></pre>
